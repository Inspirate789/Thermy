// Code generated by swaggo/swag. DO NOT EDIT.

package swagger

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "API Support",
            "email": "andreysapozhkov535@gmail.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://mit-license.org/"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/admin/stat": {
            "get": {
                "description": "return the statistic of the server process",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Show the status of server.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User authentication token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_Inspirate789_Thermy-backend_pkg_monitoring.ProcStat"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/elements": {
            "post": {
                "description": "add new elements of structural models",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "educator"
                ],
                "summary": "Add new elements of structural models.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User authentication token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Text markup layer",
                        "name": "layer",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Structural model element names",
                        "name": "modelElementNames",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_Inspirate789_Thermy-backend_internal_domain_interfaces.ModelElementNamesDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_Inspirate789_Thermy-backend_internal_domain_interfaces.ModelElementsIdDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/elements/all": {
            "get": {
                "description": "return all elements of structural models in the given text markup layer",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "student"
                ],
                "summary": "Show all elements of structural models in the given text markup layer.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User authentication token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Text markup layer",
                        "name": "layer",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_Inspirate789_Thermy-backend_internal_domain_interfaces.OutputModelsDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/layers": {
            "post": {
                "description": "add new text markup layer",
                "tags": [
                    "educator"
                ],
                "summary": "Add new text markup layer.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User authentication token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Text markup layer",
                        "name": "layer",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/layers/all": {
            "get": {
                "description": "return all text markup layers",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "student"
                ],
                "summary": "Show all text markup layers.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User authentication token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_Inspirate789_Thermy-backend_internal_domain_interfaces.LayersDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "log in to the server",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "common"
                ],
                "summary": "Log in to the server.",
                "parameters": [
                    {
                        "description": "Authentication request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_Inspirate789_Thermy-backend_internal_domain_entities.AuthRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_adapters_server.loginResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/logout": {
            "post": {
                "description": "log out from the server",
                "tags": [
                    "common"
                ],
                "summary": "Log out from the server.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User authentication token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/models": {
            "post": {
                "description": "add new structural models",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "educator"
                ],
                "summary": "Add new structural models.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User authentication token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Text markup layer",
                        "name": "layer",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Structural model names",
                        "name": "modelNames",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_Inspirate789_Thermy-backend_internal_domain_interfaces.ModelNamesDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_Inspirate789_Thermy-backend_internal_domain_interfaces.ModelsIdDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/models/all": {
            "get": {
                "description": "return all structural models in the given text markup layer",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "student"
                ],
                "summary": "Show all structural models in the given text markup layer.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User authentication token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Text markup layer",
                        "name": "layer",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_Inspirate789_Thermy-backend_internal_domain_interfaces.OutputModelsDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/properties": {
            "post": {
                "description": "add new unit properties",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "student"
                ],
                "summary": "Add new unit properties.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User authentication token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Unit property names",
                        "name": "propertyNames",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_Inspirate789_Thermy-backend_internal_domain_interfaces.PropertyNamesDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_Inspirate789_Thermy-backend_internal_domain_interfaces.PropertiesIdDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/properties/all": {
            "put": {
                "description": "return all unit properties",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "student"
                ],
                "summary": "Show all unit properties.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User authentication token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_Inspirate789_Thermy-backend_internal_domain_interfaces.OutputModelsDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/properties/unit": {
            "put": {
                "description": "return all properties for the given unit in the given text markup layer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "student"
                ],
                "summary": "Show all properties for the given unit in the given text markup layer.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User authentication token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Text markup layer",
                        "name": "layer",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Unit data according to which the search will be performed",
                        "name": "propertiesID",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_Inspirate789_Thermy-backend_internal_domain_interfaces.SearchUnitDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_Inspirate789_Thermy-backend_internal_domain_interfaces.OutputPropertiesDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/units": {
            "post": {
                "description": "add new units in the given text markup layer",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "student"
                ],
                "summary": "Add new units in the given text markup layer.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User authentication token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Text markup layer",
                        "name": "layer",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Information about stored units",
                        "name": "unitsDTO",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_Inspirate789_Thermy-backend_internal_domain_interfaces.SaveUnitsDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "patch": {
                "description": "update existing units in the given text markup layer",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "student"
                ],
                "summary": "Update existing units in the given text markup layer.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User authentication token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Text markup layer",
                        "name": "layer",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Information about updated units",
                        "name": "unitsDTO",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_Inspirate789_Thermy-backend_internal_domain_interfaces.UpdateUnitsDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/units/all": {
            "put": {
                "description": "return all units in the given text markup layer",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "student"
                ],
                "summary": "Show all units in the given text markup layer.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User authentication token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Text markup layer",
                        "name": "layer",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_Inspirate789_Thermy-backend_internal_domain_interfaces.OutputUnitsDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/units/models": {
            "put": {
                "description": "return all units with given structural models in the given text markup layer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "student"
                ],
                "summary": "Show all units with given structural models in the given text markup layer.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User authentication token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Text markup layer",
                        "name": "layer",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Models ID according to which the search will be performed",
                        "name": "propertiesID",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_Inspirate789_Thermy-backend_internal_domain_interfaces.ModelsIdDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_Inspirate789_Thermy-backend_internal_domain_interfaces.OutputUnitsDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/units/properties": {
            "put": {
                "description": "return all units with given properties in the given text markup layer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "student"
                ],
                "summary": "Show all units with given properties in the given text markup layer.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User authentication token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Text markup layer",
                        "name": "layer",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Properties ID according to which the search will be performed",
                        "name": "propertiesID",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_Inspirate789_Thermy-backend_internal_domain_interfaces.PropertiesIdDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_Inspirate789_Thermy-backend_internal_domain_interfaces.OutputUnitsDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/users": {
            "post": {
                "description": "add new user",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Add new user.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User authentication token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "User information",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_Inspirate789_Thermy-backend_internal_domain_interfaces.UserDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "github_com_Inspirate789_Thermy-backend_internal_domain_entities.AuthRequest": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "github_com_Inspirate789_Thermy-backend_internal_domain_interfaces.ContextDTO": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "text": {
                    "type": "string"
                }
            }
        },
        "github_com_Inspirate789_Thermy-backend_internal_domain_interfaces.LayersDTO": {
            "type": "object",
            "properties": {
                "layers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "github_com_Inspirate789_Thermy-backend_internal_domain_interfaces.ModelElementNamesDTO": {
            "type": "object",
            "properties": {
                "model_element_names": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "github_com_Inspirate789_Thermy-backend_internal_domain_interfaces.ModelElementsIdDTO": {
            "type": "object",
            "properties": {
                "model_elements_id": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "github_com_Inspirate789_Thermy-backend_internal_domain_interfaces.ModelNamesDTO": {
            "type": "object",
            "properties": {
                "model_names": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "github_com_Inspirate789_Thermy-backend_internal_domain_interfaces.ModelsIdDTO": {
            "type": "object",
            "properties": {
                "models_id": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "github_com_Inspirate789_Thermy-backend_internal_domain_interfaces.OutputModelDTO": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "github_com_Inspirate789_Thermy-backend_internal_domain_interfaces.OutputModelsDTO": {
            "type": "object",
            "properties": {
                "models": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_Inspirate789_Thermy-backend_internal_domain_interfaces.OutputModelDTO"
                    }
                }
            }
        },
        "github_com_Inspirate789_Thermy-backend_internal_domain_interfaces.OutputPropertiesDTO": {
            "type": "object",
            "properties": {
                "properties": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_Inspirate789_Thermy-backend_internal_domain_interfaces.OutputPropertyDTO"
                    }
                }
            }
        },
        "github_com_Inspirate789_Thermy-backend_internal_domain_interfaces.OutputPropertyDTO": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "github_com_Inspirate789_Thermy-backend_internal_domain_interfaces.OutputUnitDTO": {
            "type": "object",
            "properties": {
                "contexts_id": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "model_id": {
                    "type": "integer"
                },
                "properties_id": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "reg_date": {
                    "type": "string"
                },
                "text": {
                    "type": "string"
                }
            }
        },
        "github_com_Inspirate789_Thermy-backend_internal_domain_interfaces.OutputUnitsDTO": {
            "type": "object",
            "properties": {
                "contexts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_Inspirate789_Thermy-backend_internal_domain_interfaces.ContextDTO"
                    }
                },
                "units": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/definitions/github_com_Inspirate789_Thermy-backend_internal_domain_interfaces.OutputUnitDTO"
                        }
                    }
                }
            }
        },
        "github_com_Inspirate789_Thermy-backend_internal_domain_interfaces.PropertiesIdDTO": {
            "type": "object",
            "properties": {
                "properties_id": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "github_com_Inspirate789_Thermy-backend_internal_domain_interfaces.PropertyNamesDTO": {
            "type": "object",
            "properties": {
                "property_names": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "github_com_Inspirate789_Thermy-backend_internal_domain_interfaces.SaveUnitDTO": {
            "type": "object",
            "properties": {
                "model_id": {
                    "type": "integer"
                },
                "properties_id": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "text": {
                    "type": "string"
                }
            }
        },
        "github_com_Inspirate789_Thermy-backend_internal_domain_interfaces.SaveUnitsDTO": {
            "type": "object",
            "properties": {
                "contexts": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "units": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/definitions/github_com_Inspirate789_Thermy-backend_internal_domain_interfaces.SaveUnitDTO"
                        }
                    }
                }
            }
        },
        "github_com_Inspirate789_Thermy-backend_internal_domain_interfaces.SearchUnitDTO": {
            "type": "object",
            "properties": {
                "lang": {
                    "type": "string"
                },
                "text": {
                    "type": "string"
                }
            }
        },
        "github_com_Inspirate789_Thermy-backend_internal_domain_interfaces.UpdateUnitDTO": {
            "type": "object",
            "properties": {
                "lang": {
                    "type": "string"
                },
                "new_text": {
                    "type": "string"
                },
                "old_text": {
                    "type": "string"
                },
                "properties_id": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "github_com_Inspirate789_Thermy-backend_internal_domain_interfaces.UpdateUnitsDTO": {
            "type": "object",
            "properties": {
                "units": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_Inspirate789_Thermy-backend_internal_domain_interfaces.UpdateUnitDTO"
                    }
                }
            }
        },
        "github_com_Inspirate789_Thermy-backend_internal_domain_interfaces.UserDTO": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                }
            }
        },
        "github_com_Inspirate789_Thermy-backend_pkg_monitoring.CalculatedMetrics": {
            "type": "object",
            "properties": {
                "cpu_time": {
                    "type": "number"
                },
                "resident_memory_size": {
                    "type": "integer"
                },
                "start_time": {
                    "type": "string"
                },
                "virtual_memory_size": {
                    "type": "integer"
                }
            }
        },
        "github_com_Inspirate789_Thermy-backend_pkg_monitoring.PageMap": {
            "type": "object",
            "properties": {
                "regions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_Inspirate789_Thermy-backend_pkg_monitoring.Region"
                    }
                }
            }
        },
        "github_com_Inspirate789_Thermy-backend_pkg_monitoring.ProcStat": {
            "type": "object",
            "properties": {
                "calculated_metrics": {
                    "$ref": "#/definitions/github_com_Inspirate789_Thermy-backend_pkg_monitoring.CalculatedMetrics"
                },
                "cwd": {
                    "type": "string"
                },
                "environ": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "maps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/procfs.ProcMap"
                    }
                },
                "measuring_time": {
                    "type": "string"
                },
                "pagemap": {
                    "$ref": "#/definitions/github_com_Inspirate789_Thermy-backend_pkg_monitoring.PageMap"
                },
                "stat": {
                    "$ref": "#/definitions/procfs.ProcStat"
                }
            }
        },
        "github_com_Inspirate789_Thermy-backend_pkg_monitoring.Region": {
            "type": "object",
            "properties": {
                "end_addr": {
                    "type": "integer"
                },
                "exclusively_mapped": {
                    "type": "integer"
                },
                "file_page_or_shared_anon": {
                    "type": "integer"
                },
                "pages_count": {
                    "type": "integer"
                },
                "present": {
                    "type": "integer"
                },
                "pte_soft_dirty": {
                    "type": "integer"
                },
                "start_addr": {
                    "type": "integer"
                },
                "swapped": {
                    "type": "integer"
                },
                "undefined": {
                    "type": "integer"
                }
            }
        },
        "internal_adapters_server.loginResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "procfs.ProcMap": {
            "type": "object",
            "properties": {
                "dev": {
                    "description": "Device owner of this mapping (major:minor) in Mkdev format.",
                    "type": "integer"
                },
                "endAddr": {
                    "description": "The end address of the current mapping",
                    "type": "integer"
                },
                "inode": {
                    "description": "The inode of the device above",
                    "type": "integer"
                },
                "offset": {
                    "description": "The current offset into the file/fd (e.g., shared libs)",
                    "type": "integer"
                },
                "pathname": {
                    "description": "The file or psuedofile (or empty==anonymous)",
                    "type": "string"
                },
                "perms": {
                    "description": "The permissions for this mapping",
                    "allOf": [
                        {
                            "$ref": "#/definitions/procfs.ProcMapPermissions"
                        }
                    ]
                },
                "startAddr": {
                    "description": "The start address of current mapping.",
                    "type": "integer"
                }
            }
        },
        "procfs.ProcMapPermissions": {
            "type": "object",
            "properties": {
                "execute": {
                    "description": "mapping has the [X]ecutable flag set",
                    "type": "boolean"
                },
                "private": {
                    "description": "mapping is marked as [P]rivate (copy on write)",
                    "type": "boolean"
                },
                "read": {
                    "description": "mapping has the [R]ead flag set",
                    "type": "boolean"
                },
                "shared": {
                    "description": "mapping has the [S]hared flag set",
                    "type": "boolean"
                },
                "write": {
                    "description": "mapping has the [W]rite flag set",
                    "type": "boolean"
                }
            }
        },
        "procfs.ProcStat": {
            "type": "object",
            "properties": {
                "cmajFlt": {
                    "description": "The number of major faults that the process's waited-for children have\nmade.",
                    "type": "integer"
                },
                "cminFlt": {
                    "description": "The number of minor faults that the process's waited-for children have\nmade.",
                    "type": "integer"
                },
                "comm": {
                    "description": "The filename of the executable.",
                    "type": "string"
                },
                "cstime": {
                    "description": "Amount of time that this process's waited-for children have been\nscheduled in kernel mode, measured in clock ticks.",
                    "type": "integer"
                },
                "cutime": {
                    "description": "Amount of time that this process's waited-for children have been\nscheduled in user mode, measured in clock ticks.",
                    "type": "integer"
                },
                "delayAcctBlkIOTicks": {
                    "description": "Aggregated block I/O delays, measured in clock ticks (centiseconds).",
                    "type": "integer"
                },
                "flags": {
                    "description": "The kernel flags word of the process.",
                    "type": "integer"
                },
                "majFlt": {
                    "description": "The number of major faults the process has made which have required\nloading a memory page from disk.",
                    "type": "integer"
                },
                "minFlt": {
                    "description": "The number of minor faults the process has made which have not required\nloading a memory page from disk.",
                    "type": "integer"
                },
                "nice": {
                    "description": "The nice value, a value in the range 19 (low priority) to -20 (high\npriority).",
                    "type": "integer"
                },
                "numThreads": {
                    "description": "Number of threads in this process.",
                    "type": "integer"
                },
                "pgrp": {
                    "description": "The process group ID of the process.",
                    "type": "integer"
                },
                "pid": {
                    "description": "The process ID.",
                    "type": "integer"
                },
                "policy": {
                    "description": "Scheduling policy.",
                    "type": "integer"
                },
                "ppid": {
                    "description": "The PID of the parent of this process.",
                    "type": "integer"
                },
                "priority": {
                    "description": "For processes running a real-time scheduling policy, this is the negated\nscheduling priority, minus one.",
                    "type": "integer"
                },
                "processor": {
                    "description": "CPU number last executed on.",
                    "type": "integer"
                },
                "rss": {
                    "description": "Resident set size in pages.",
                    "type": "integer"
                },
                "rsslimit": {
                    "description": "Soft limit in bytes on the rss of the process.",
                    "type": "integer"
                },
                "rtpriority": {
                    "description": "Real-time scheduling priority, a number in the range 1 to 99 for processes\nscheduled under a real-time policy, or 0, for non-real-time processes.",
                    "type": "integer"
                },
                "session": {
                    "description": "The session ID of the process.",
                    "type": "integer"
                },
                "starttime": {
                    "description": "The time the process started after system boot, the value is expressed\nin clock ticks.",
                    "type": "integer"
                },
                "state": {
                    "description": "The process state.",
                    "type": "string"
                },
                "stime": {
                    "description": "Amount of time that this process has been scheduled in kernel mode,\nmeasured in clock ticks.",
                    "type": "integer"
                },
                "tpgid": {
                    "description": "The ID of the foreground process group of the controlling terminal of\nthe process.",
                    "type": "integer"
                },
                "tty": {
                    "description": "The controlling terminal of the process.",
                    "type": "integer"
                },
                "utime": {
                    "description": "Amount of time that this process has been scheduled in user mode,\nmeasured in clock ticks.",
                    "type": "integer"
                },
                "vsize": {
                    "description": "Virtual memory size in bytes.",
                    "type": "integer"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/api/v1",
	Schemes:          []string{"http"},
	Title:            "Thermy API",
	Description:      "This is a Thermy backend API.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
